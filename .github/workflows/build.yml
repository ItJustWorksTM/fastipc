name: Build & Test
on: [push, pull_request]
jobs:
  build-ubuntu:
    name: ${{ matrix.toolchain.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - name: GCC
            cc: gcc-14
            cxx: g++-14
            cxxflags:
            ld: MOLD
            ldflags:
          - name: Clang/LLVM
            cc: clang-20
            cxx: clang++-20
            cxxflags: -stdlib=libc++
            ld: LLD
            ldflags: -lllvmlibc
    steps:
      - uses: actions/checkout@v4
      - uses: rui314/setup-mold@v1
        if: matrix.toolchain.name == 'GCC'
      - name: Grab more recent Clang/LLVM
        if: matrix.toolchain.name == 'Clang/LLVM'
        run: |
            sudo wget -O /etc/apt/trusted.gpg.d/apt.llvm.org.asc https://apt.llvm.org/llvm-snapshot.gpg.key
            sudo add-apt-repository -y "deb http://apt.llvm.org/$(lsb_release -sc)/ llvm-toolchain-$(lsb_release -sc)-20 main"
            sudo apt-get update && sudo apt-get install -y --no-install-recommends clang-20 lld-20 libllvmlibc-20-dev libc++-20-dev libc++abi-20-dev clang-tidy-20
      - name: Check deps
        run: |
          cmake --version
          ninja --version
          ${{ matrix.toolchain.cc }} --version
          ${{ matrix.toolchain.cxx }} --version
      - run: git config include.path ../.gitconfig
      - name: Configure
        run: |
          git configure -G Ninja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DCMAKE_C_COMPILER=${{ matrix.toolchain.cc }} \
            -DCMAKE_CXX_COMPILER=${{ matrix.toolchain.cxx }} \
            -DCMAKE_CXX_FLAGS=${{ matrix.toolchain.cxxflags }} \
            -DCMAKE_LINKER_TYPE=${{ matrix.toolchain.ld }} \
            -DCMAKE_EXE_LINKER_FLAGS=${{ matrix.toolchain.ldflags }} \
            -DCMAKE_LINK_WHAT_YOU_USE=True
      - name: Build
        run: git build
      - name: Test
        env:
          CTEST_NO_TESTS_ACTION: error
        run: git test
      - name: Lint
        if: matrix.toolchain.name == 'Clang/LLVM'
        env:
          CLANG_TIDY: clang-tidy-20
        run: git clang-tidy
